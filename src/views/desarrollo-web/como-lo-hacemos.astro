---
import CardService from "@components/CardService.astro";
import type { CardService as CardServiceType } from "@utils/data";

interface Props {
  services: CardServiceType[];
}
const { services }: Props = Astro.props;
---

<section class="h-[100dvh] snap-start section-03 bg-[url('/img/servicios-integrales/enfoque-estrategico-bg.webp')] bg-cover bg-center">
  <div class="container mx-auto flex flex-col items-center h-full py-5">
    <picture class="2xl:size-56 xl:size-48 lg:size-40 size-32 lg:translate-y-5 translate-y-2 img-como-lo-hacemos">
      <img src="/img/desarrollo-web/dev-config.webp" alt="¿Cómo lo hacemos?"/>
    </picture>
    <h2 class="text-rose-to-purple 2xl:text-7xl xl:text-7xl lg:text-6xl text-4xl font-bold title-s-03 leading-normal title-s-03">¿Cómo lo hacemos?</h2>
    <div class="grid grid-cols-1 md:grid-cols-2 lg:gap-x-16 xl:gap-y-8 lg:gap-y-6 gap-y-4 2xl:mt-16 xl:mt-10 lg:mt-8 mt-6">
      {services.map((service) => (
        <CardService {...service} />
      ))}
    </div>
  </div>
</section>

<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";
  import { SplitText } from "gsap/SplitText";

  gsap.registerPlugin(ScrollTrigger, SplitText);

  let splitText: SplitText;
  
  document.fonts.ready.then(() => {
    splitText = new SplitText('.title-s-03', {
      type: 'lines',
      linesClass: 'text-rose-to-purple',
    });
  });

  const tl = gsap.timeline()

  ScrollTrigger.create({
    scroller: 'main',
    trigger: '.section-03',
    onEnter: () => {
      tl.clear();
      
      tl.fromTo('.img-como-lo-hacemos', {
        y: 100,
        rotate: 10,
        autoAlpha: 0,
      }, {
        delay: 0.35,
        y: 20,
        autoAlpha: 1,
        duration: 1,
        rotate: -10,
        ease: "back",
      }).fromTo(splitText.lines, {
        y: 100,
        filter: 'blur(10px)',
      }, {
        y: 0,
        filter: 'blur(0px)',
        ease: "back.out",
        duration: 1,
      }, '<').fromTo('#card', {
        y: 100,
        autoAlpha: 0,
        filter: 'blur(10px)',
      }, {
        y: 0,
        autoAlpha: 1,
        filter: 'blur(0px)',
        stagger: 0.1,
        duration: 1,
        force3D: false,
        ease: "power4.out",
      }, '-=0.5')
    },
    onLeaveBack: () => {
      tl.clear();
    }
  })
</script>